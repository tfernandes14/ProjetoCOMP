Terminals unused in grammar

   ARROW
   RESERVED


Grammar

    0 $accept: Program $end

    1 Program: CLASS ID LBRACE ProgramOpt RBRACE

    2 ProgramOpt: MethodDecl ProgramOpt
    3           | FieldDecl ProgramOpt
    4           | SEMICOLON ProgramOpt
    5           | %empty

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

    7 FieldDecl: PUBLIC STATIC Type ID FieldDeclOpt SEMICOLON
    8          | error SEMICOLON

    9 FieldDeclOpt: COMMA ID FieldDeclOpt
   10             | %empty

   11 Type: BOOL
   12     | INT
   13     | DOUBLE

   14 MethodHeader: Type ID LPAR MethodHeaderOpt2 RPAR
   15             | VOID ID LPAR MethodHeaderOpt2 RPAR

   16 MethodHeaderOpt2: FormalParams
   17                 | %empty

   18 FormalParams: Type ID FormalParamsOpt
   19             | STRING LSQ RSQ ID

   20 FormalParamsOpt: COMMA Type ID FormalParamsOpt
   21                | %empty

   22 MethodBody: LBRACE MethodBody2 RBRACE

   23 MethodBody2: Statement MethodBody2
   24            | VarDecl MethodBody2
   25            | %empty

   26 VarDecl: Type ID VarDeclOpt SEMICOLON

   27 VarDeclOpt: COMMA ID VarDeclOpt
   28           | %empty

   29 Statement: LBRACE StatementOpt RBRACE
   30          | IF LPAR Expr RPAR Statement
   31          | IF LPAR Expr RPAR Statement ELSE Statement
   32          | WHILE LPAR Expr RPAR Statement
   33          | RETURN StatementOpt3 SEMICOLON
   34          | StatementOpt4 SEMICOLON
   35          | PRINT LPAR StatementOpt5 RPAR SEMICOLON
   36          | error SEMICOLON

   37 StatementOpt: Statement StatementOpt
   38             | %empty

   39 StatementOpt3: Expr
   40              | %empty

   41 StatementOpt4: MethodInvocation
   42              | Assignment
   43              | ParseArgs
   44              | %empty

   45 StatementOpt5: Expr
   46              | STRLIT

   47 MethodInvocation: ID LPAR MethodInvocationOpt RPAR
   48                 | ID LPAR error RPAR

   49 MethodInvocationOpt: Expr MethodInvocationOpt2
   50                    | %empty

   51 MethodInvocationOpt2: COMMA Expr MethodInvocationOpt2
   52                     | %empty

   53 Assignment: ID ASSIGN Expr

   54 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR
   55          | PARSEINT LPAR error RPAR

   56 Expr: Expr1
   57     | Assignment

   58 Expr1: LPAR Expr RPAR
   59      | LPAR error RPAR
   60      | Expr1 PLUS Expr1
   61      | Expr1 MINUS Expr1
   62      | Expr1 STAR Expr1
   63      | Expr1 DIV Expr1
   64      | Expr1 MOD Expr1
   65      | Expr1 AND Expr1
   66      | Expr1 OR Expr1
   67      | Expr1 XOR Expr1
   68      | Expr1 LSHIFT Expr1
   69      | Expr1 RSHIFT Expr1
   70      | Expr1 EQ Expr1
   71      | Expr1 GE Expr1
   72      | Expr1 GT Expr1
   73      | Expr1 LE Expr1
   74      | Expr1 LT Expr1
   75      | Expr1 NE Expr1
   76      | NOT Expr1
   77      | MINUS Expr1
   78      | PLUS Expr1
   79      | MethodInvocation
   80      | ParseArgs
   81      | ID
   82      | ID DOTLENGTH
   83      | INTLIT
   84      | REALLIT
   85      | BOOLLIT


Terminals, with rules where they appear

$end (0) 0
error (256) 8 36 48 55 59
AND (258) 65
ASSIGN (259) 53
STAR (260) 62
COMMA (261) 9 20 27 51
DIV (262) 63
EQ (263) 70
GE (264) 71
GT (265) 72
IF (266) 30 31
LBRACE (267) 1 22 29
LE (268) 73
LPAR (269) 14 15 30 31 32 35 47 48 54 55 58 59
LSQ (270) 19 54
LT (271) 74
MINUS (272) 61 77
MOD (273) 64
NE (274) 75
NOT (275) 76
OR (276) 66
PLUS (277) 60 78
RBRACE (278) 1 22 29
RPAR (279) 14 15 30 31 32 35 47 48 54 55 58 59
RSQ (280) 19 54
SEMICOLON (281) 4 7 8 26 33 34 35 36
ARROW (282)
LSHIFT (283) 68
RSHIFT (284) 69
XOR (285) 67
BOOL (286) 11
CLASS (287) 1
DOTLENGTH (288) 82
DOUBLE (289) 13
ELSE (290) 31
INT (291) 12
PRINT (292) 35
PARSEINT (293) 54 55
PUBLIC (294) 6 7
RETURN (295) 33
STATIC (296) 6 7
STRING (297) 19
VOID (298) 15
WHILE (299) 32
INTLIT (300) 83
REALLIT (301) 84
BOOLLIT (302) 85
RESERVED (303)
ID (304) 1 7 9 14 15 18 19 20 26 27 47 48 53 54 81 82
STRLIT (305) 46


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
Program (52)
    on left: 1, on right: 0
ProgramOpt (53)
    on left: 2 3 4 5, on right: 1 2 3 4
MethodDecl (54)
    on left: 6, on right: 2
FieldDecl (55)
    on left: 7 8, on right: 3
FieldDeclOpt (56)
    on left: 9 10, on right: 7 9
Type (57)
    on left: 11 12 13, on right: 7 14 18 20 26
MethodHeader (58)
    on left: 14 15, on right: 6
MethodHeaderOpt2 (59)
    on left: 16 17, on right: 14 15
FormalParams (60)
    on left: 18 19, on right: 16
FormalParamsOpt (61)
    on left: 20 21, on right: 18 20
MethodBody (62)
    on left: 22, on right: 6
MethodBody2 (63)
    on left: 23 24 25, on right: 22 23 24
VarDecl (64)
    on left: 26, on right: 24
VarDeclOpt (65)
    on left: 27 28, on right: 26 27
Statement (66)
    on left: 29 30 31 32 33 34 35 36, on right: 23 30 31 32 37
StatementOpt (67)
    on left: 37 38, on right: 29 37
StatementOpt3 (68)
    on left: 39 40, on right: 33
StatementOpt4 (69)
    on left: 41 42 43 44, on right: 34
StatementOpt5 (70)
    on left: 45 46, on right: 35
MethodInvocation (71)
    on left: 47 48, on right: 41 79
MethodInvocationOpt (72)
    on left: 49 50, on right: 47
MethodInvocationOpt2 (73)
    on left: 51 52, on right: 49 51
Assignment (74)
    on left: 53, on right: 42 57
ParseArgs (75)
    on left: 54 55, on right: 43 80
Expr (76)
    on left: 56 57, on right: 30 31 32 39 45 49 51 53 54 58
Expr1 (77)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75
    76 77 78 79 80 81 82 83 84 85, on right: 56 60 61 62 63 64 65 66
    67 68 69 70 71 72 73 74 75 76 77 78


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: CLASS . ID LBRACE ProgramOpt RBRACE

    ID  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: CLASS ID . LBRACE ProgramOpt RBRACE

    LBRACE  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: CLASS ID LBRACE . ProgramOpt RBRACE

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 5 (ProgramOpt)

    ProgramOpt  go to state 9
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 6

    8 FieldDecl: error . SEMICOLON

    SEMICOLON  shift, and go to state 12


State 7

    4 ProgramOpt: SEMICOLON . ProgramOpt

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 5 (ProgramOpt)

    ProgramOpt  go to state 13
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 8

    6 MethodDecl: PUBLIC . STATIC MethodHeader MethodBody
    7 FieldDecl: PUBLIC . STATIC Type ID FieldDeclOpt SEMICOLON

    STATIC  shift, and go to state 14


State 9

    1 Program: CLASS ID LBRACE ProgramOpt . RBRACE

    RBRACE  shift, and go to state 15


State 10

    2 ProgramOpt: MethodDecl . ProgramOpt

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 5 (ProgramOpt)

    ProgramOpt  go to state 16
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 11

    3 ProgramOpt: FieldDecl . ProgramOpt

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 5 (ProgramOpt)

    ProgramOpt  go to state 17
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 12

    8 FieldDecl: error SEMICOLON .

    $default  reduce using rule 8 (FieldDecl)


State 13

    4 ProgramOpt: SEMICOLON ProgramOpt .

    $default  reduce using rule 4 (ProgramOpt)


State 14

    6 MethodDecl: PUBLIC STATIC . MethodHeader MethodBody
    7 FieldDecl: PUBLIC STATIC . Type ID FieldDeclOpt SEMICOLON

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20
    VOID    shift, and go to state 21

    Type          go to state 22
    MethodHeader  go to state 23


State 15

    1 Program: CLASS ID LBRACE ProgramOpt RBRACE .

    $default  reduce using rule 1 (Program)


State 16

    2 ProgramOpt: MethodDecl ProgramOpt .

    $default  reduce using rule 2 (ProgramOpt)


State 17

    3 ProgramOpt: FieldDecl ProgramOpt .

    $default  reduce using rule 3 (ProgramOpt)


State 18

   11 Type: BOOL .

    $default  reduce using rule 11 (Type)


State 19

   13 Type: DOUBLE .

    $default  reduce using rule 13 (Type)


State 20

   12 Type: INT .

    $default  reduce using rule 12 (Type)


State 21

   15 MethodHeader: VOID . ID LPAR MethodHeaderOpt2 RPAR

    ID  shift, and go to state 24


State 22

    7 FieldDecl: PUBLIC STATIC Type . ID FieldDeclOpt SEMICOLON
   14 MethodHeader: Type . ID LPAR MethodHeaderOpt2 RPAR

    ID  shift, and go to state 25


State 23

    6 MethodDecl: PUBLIC STATIC MethodHeader . MethodBody

    LBRACE  shift, and go to state 26

    MethodBody  go to state 27


State 24

   15 MethodHeader: VOID ID . LPAR MethodHeaderOpt2 RPAR

    LPAR  shift, and go to state 28


State 25

    7 FieldDecl: PUBLIC STATIC Type ID . FieldDeclOpt SEMICOLON
   14 MethodHeader: Type ID . LPAR MethodHeaderOpt2 RPAR

    COMMA  shift, and go to state 29
    LPAR   shift, and go to state 30

    $default  reduce using rule 10 (FieldDeclOpt)

    FieldDeclOpt  go to state 31


State 26

   22 MethodBody: LBRACE . MethodBody2 RBRACE

    error     shift, and go to state 32
    IF        shift, and go to state 33
    LBRACE    shift, and go to state 34
    BOOL      shift, and go to state 18
    DOUBLE    shift, and go to state 19
    INT       shift, and go to state 20
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    RBRACE     reduce using rule 25 (MethodBody2)
    SEMICOLON  reduce using rule 44 (StatementOpt4)

    Type              go to state 40
    MethodBody2       go to state 41
    VarDecl           go to state 42
    Statement         go to state 43
    StatementOpt4     go to state 44
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 27

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody .

    $default  reduce using rule 6 (MethodDecl)


State 28

   15 MethodHeader: VOID ID LPAR . MethodHeaderOpt2 RPAR

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20
    STRING  shift, and go to state 48

    $default  reduce using rule 17 (MethodHeaderOpt2)

    Type              go to state 49
    MethodHeaderOpt2  go to state 50
    FormalParams      go to state 51


State 29

    9 FieldDeclOpt: COMMA . ID FieldDeclOpt

    ID  shift, and go to state 52


State 30

   14 MethodHeader: Type ID LPAR . MethodHeaderOpt2 RPAR

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20
    STRING  shift, and go to state 48

    $default  reduce using rule 17 (MethodHeaderOpt2)

    Type              go to state 49
    MethodHeaderOpt2  go to state 53
    FormalParams      go to state 51


State 31

    7 FieldDecl: PUBLIC STATIC Type ID FieldDeclOpt . SEMICOLON

    SEMICOLON  shift, and go to state 54


State 32

   36 Statement: error . SEMICOLON

    SEMICOLON  shift, and go to state 55


State 33

   30 Statement: IF . LPAR Expr RPAR Statement
   31          | IF . LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 56


State 34

   29 Statement: LBRACE . StatementOpt RBRACE

    error     shift, and go to state 32
    IF        shift, and go to state 33
    LBRACE    shift, and go to state 34
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    RBRACE     reduce using rule 38 (StatementOpt)
    SEMICOLON  reduce using rule 44 (StatementOpt4)

    Statement         go to state 57
    StatementOpt      go to state 58
    StatementOpt4     go to state 44
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 35

   35 Statement: PRINT . LPAR StatementOpt5 RPAR SEMICOLON

    LPAR  shift, and go to state 59


State 36

   54 ParseArgs: PARSEINT . LPAR ID LSQ Expr RSQ RPAR
   55          | PARSEINT . LPAR error RPAR

    LPAR  shift, and go to state 60


State 37

   33 Statement: RETURN . StatementOpt3 SEMICOLON

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 68

    $default  reduce using rule 40 (StatementOpt3)

    StatementOpt3     go to state 69
    MethodInvocation  go to state 70
    Assignment        go to state 71
    ParseArgs         go to state 72
    Expr              go to state 73
    Expr1             go to state 74


State 38

   32 Statement: WHILE . LPAR Expr RPAR Statement

    LPAR  shift, and go to state 75


State 39

   47 MethodInvocation: ID . LPAR MethodInvocationOpt RPAR
   48                 | ID . LPAR error RPAR
   53 Assignment: ID . ASSIGN Expr

    ASSIGN  shift, and go to state 76
    LPAR    shift, and go to state 77


State 40

   26 VarDecl: Type . ID VarDeclOpt SEMICOLON

    ID  shift, and go to state 78


State 41

   22 MethodBody: LBRACE MethodBody2 . RBRACE

    RBRACE  shift, and go to state 79


State 42

   24 MethodBody2: VarDecl . MethodBody2

    error     shift, and go to state 32
    IF        shift, and go to state 33
    LBRACE    shift, and go to state 34
    BOOL      shift, and go to state 18
    DOUBLE    shift, and go to state 19
    INT       shift, and go to state 20
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    RBRACE     reduce using rule 25 (MethodBody2)
    SEMICOLON  reduce using rule 44 (StatementOpt4)

    Type              go to state 40
    MethodBody2       go to state 80
    VarDecl           go to state 42
    Statement         go to state 43
    StatementOpt4     go to state 44
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 43

   23 MethodBody2: Statement . MethodBody2

    error     shift, and go to state 32
    IF        shift, and go to state 33
    LBRACE    shift, and go to state 34
    BOOL      shift, and go to state 18
    DOUBLE    shift, and go to state 19
    INT       shift, and go to state 20
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    RBRACE     reduce using rule 25 (MethodBody2)
    SEMICOLON  reduce using rule 44 (StatementOpt4)

    Type              go to state 40
    MethodBody2       go to state 81
    VarDecl           go to state 42
    Statement         go to state 43
    StatementOpt4     go to state 44
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 44

   34 Statement: StatementOpt4 . SEMICOLON

    SEMICOLON  shift, and go to state 82


State 45

   41 StatementOpt4: MethodInvocation .

    $default  reduce using rule 41 (StatementOpt4)


State 46

   42 StatementOpt4: Assignment .

    $default  reduce using rule 42 (StatementOpt4)


State 47

   43 StatementOpt4: ParseArgs .

    $default  reduce using rule 43 (StatementOpt4)


State 48

   19 FormalParams: STRING . LSQ RSQ ID

    LSQ  shift, and go to state 83


State 49

   18 FormalParams: Type . ID FormalParamsOpt

    ID  shift, and go to state 84


State 50

   15 MethodHeader: VOID ID LPAR MethodHeaderOpt2 . RPAR

    RPAR  shift, and go to state 85


State 51

   16 MethodHeaderOpt2: FormalParams .

    $default  reduce using rule 16 (MethodHeaderOpt2)


State 52

    9 FieldDeclOpt: COMMA ID . FieldDeclOpt

    COMMA  shift, and go to state 29

    $default  reduce using rule 10 (FieldDeclOpt)

    FieldDeclOpt  go to state 86


State 53

   14 MethodHeader: Type ID LPAR MethodHeaderOpt2 . RPAR

    RPAR  shift, and go to state 87


State 54

    7 FieldDecl: PUBLIC STATIC Type ID FieldDeclOpt SEMICOLON .

    $default  reduce using rule 7 (FieldDecl)


State 55

   36 Statement: error SEMICOLON .

    $default  reduce using rule 36 (Statement)


State 56

   30 Statement: IF LPAR . Expr RPAR Statement
   31          | IF LPAR . Expr RPAR Statement ELSE Statement

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 68

    MethodInvocation  go to state 70
    Assignment        go to state 71
    ParseArgs         go to state 72
    Expr              go to state 88
    Expr1             go to state 74


State 57

   37 StatementOpt: Statement . StatementOpt

    error     shift, and go to state 32
    IF        shift, and go to state 33
    LBRACE    shift, and go to state 34
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    RBRACE     reduce using rule 38 (StatementOpt)
    SEMICOLON  reduce using rule 44 (StatementOpt4)

    Statement         go to state 57
    StatementOpt      go to state 89
    StatementOpt4     go to state 44
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 58

   29 Statement: LBRACE StatementOpt . RBRACE

    RBRACE  shift, and go to state 90


State 59

   35 Statement: PRINT LPAR . StatementOpt5 RPAR SEMICOLON

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 68
    STRLIT    shift, and go to state 91

    StatementOpt5     go to state 92
    MethodInvocation  go to state 70
    Assignment        go to state 71
    ParseArgs         go to state 72
    Expr              go to state 93
    Expr1             go to state 74


State 60

   54 ParseArgs: PARSEINT LPAR . ID LSQ Expr RSQ RPAR
   55          | PARSEINT LPAR . error RPAR

    error  shift, and go to state 94
    ID     shift, and go to state 95


State 61

   58 Expr1: LPAR . Expr RPAR
   59      | LPAR . error RPAR

    error     shift, and go to state 96
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 68

    MethodInvocation  go to state 70
    Assignment        go to state 71
    ParseArgs         go to state 72
    Expr              go to state 97
    Expr1             go to state 74


State 62

   77 Expr1: MINUS . Expr1

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 98

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    Expr1             go to state 99


State 63

   76 Expr1: NOT . Expr1

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 98

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    Expr1             go to state 100


State 64

   78 Expr1: PLUS . Expr1

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 98

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    Expr1             go to state 101


State 65

   83 Expr1: INTLIT .

    $default  reduce using rule 83 (Expr1)


State 66

   84 Expr1: REALLIT .

    $default  reduce using rule 84 (Expr1)


State 67

   85 Expr1: BOOLLIT .

    $default  reduce using rule 85 (Expr1)


State 68

   47 MethodInvocation: ID . LPAR MethodInvocationOpt RPAR
   48                 | ID . LPAR error RPAR
   53 Assignment: ID . ASSIGN Expr
   81 Expr1: ID .
   82      | ID . DOTLENGTH

    ASSIGN     shift, and go to state 76
    LPAR       shift, and go to state 77
    DOTLENGTH  shift, and go to state 102

    $default  reduce using rule 81 (Expr1)


State 69

   33 Statement: RETURN StatementOpt3 . SEMICOLON

    SEMICOLON  shift, and go to state 103


State 70

   79 Expr1: MethodInvocation .

    $default  reduce using rule 79 (Expr1)


State 71

   57 Expr: Assignment .

    $default  reduce using rule 57 (Expr)


State 72

   80 Expr1: ParseArgs .

    $default  reduce using rule 80 (Expr1)


State 73

   39 StatementOpt3: Expr .

    $default  reduce using rule 39 (StatementOpt3)


State 74

   56 Expr: Expr1 .
   60 Expr1: Expr1 . PLUS Expr1
   61      | Expr1 . MINUS Expr1
   62      | Expr1 . STAR Expr1
   63      | Expr1 . DIV Expr1
   64      | Expr1 . MOD Expr1
   65      | Expr1 . AND Expr1
   66      | Expr1 . OR Expr1
   67      | Expr1 . XOR Expr1
   68      | Expr1 . LSHIFT Expr1
   69      | Expr1 . RSHIFT Expr1
   70      | Expr1 . EQ Expr1
   71      | Expr1 . GE Expr1
   72      | Expr1 . GT Expr1
   73      | Expr1 . LE Expr1
   74      | Expr1 . LT Expr1
   75      | Expr1 . NE Expr1

    AND     shift, and go to state 104
    STAR    shift, and go to state 105
    DIV     shift, and go to state 106
    EQ      shift, and go to state 107
    GE      shift, and go to state 108
    GT      shift, and go to state 109
    LE      shift, and go to state 110
    LT      shift, and go to state 111
    MINUS   shift, and go to state 112
    MOD     shift, and go to state 113
    NE      shift, and go to state 114
    OR      shift, and go to state 115
    PLUS    shift, and go to state 116
    LSHIFT  shift, and go to state 117
    RSHIFT  shift, and go to state 118
    XOR     shift, and go to state 119

    $default  reduce using rule 56 (Expr)


State 75

   32 Statement: WHILE LPAR . Expr RPAR Statement

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 68

    MethodInvocation  go to state 70
    Assignment        go to state 71
    ParseArgs         go to state 72
    Expr              go to state 120
    Expr1             go to state 74


State 76

   53 Assignment: ID ASSIGN . Expr

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 68

    MethodInvocation  go to state 70
    Assignment        go to state 71
    ParseArgs         go to state 72
    Expr              go to state 121
    Expr1             go to state 74


State 77

   47 MethodInvocation: ID LPAR . MethodInvocationOpt RPAR
   48                 | ID LPAR . error RPAR

    error     shift, and go to state 122
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 68

    RPAR  reduce using rule 50 (MethodInvocationOpt)

    MethodInvocation     go to state 70
    MethodInvocationOpt  go to state 123
    Assignment           go to state 71
    ParseArgs            go to state 72
    Expr                 go to state 124
    Expr1                go to state 74


State 78

   26 VarDecl: Type ID . VarDeclOpt SEMICOLON

    COMMA  shift, and go to state 125

    $default  reduce using rule 28 (VarDeclOpt)

    VarDeclOpt  go to state 126


State 79

   22 MethodBody: LBRACE MethodBody2 RBRACE .

    $default  reduce using rule 22 (MethodBody)


State 80

   24 MethodBody2: VarDecl MethodBody2 .

    $default  reduce using rule 24 (MethodBody2)


State 81

   23 MethodBody2: Statement MethodBody2 .

    $default  reduce using rule 23 (MethodBody2)


State 82

   34 Statement: StatementOpt4 SEMICOLON .

    $default  reduce using rule 34 (Statement)


State 83

   19 FormalParams: STRING LSQ . RSQ ID

    RSQ  shift, and go to state 127


State 84

   18 FormalParams: Type ID . FormalParamsOpt

    COMMA  shift, and go to state 128

    $default  reduce using rule 21 (FormalParamsOpt)

    FormalParamsOpt  go to state 129


State 85

   15 MethodHeader: VOID ID LPAR MethodHeaderOpt2 RPAR .

    $default  reduce using rule 15 (MethodHeader)


State 86

    9 FieldDeclOpt: COMMA ID FieldDeclOpt .

    $default  reduce using rule 9 (FieldDeclOpt)


State 87

   14 MethodHeader: Type ID LPAR MethodHeaderOpt2 RPAR .

    $default  reduce using rule 14 (MethodHeader)


State 88

   30 Statement: IF LPAR Expr . RPAR Statement
   31          | IF LPAR Expr . RPAR Statement ELSE Statement

    RPAR  shift, and go to state 130


State 89

   37 StatementOpt: Statement StatementOpt .

    $default  reduce using rule 37 (StatementOpt)


State 90

   29 Statement: LBRACE StatementOpt RBRACE .

    $default  reduce using rule 29 (Statement)


State 91

   46 StatementOpt5: STRLIT .

    $default  reduce using rule 46 (StatementOpt5)


State 92

   35 Statement: PRINT LPAR StatementOpt5 . RPAR SEMICOLON

    RPAR  shift, and go to state 131


State 93

   45 StatementOpt5: Expr .

    $default  reduce using rule 45 (StatementOpt5)


State 94

   55 ParseArgs: PARSEINT LPAR error . RPAR

    RPAR  shift, and go to state 132


State 95

   54 ParseArgs: PARSEINT LPAR ID . LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 133


State 96

   59 Expr1: LPAR error . RPAR

    RPAR  shift, and go to state 134


State 97

   58 Expr1: LPAR Expr . RPAR

    RPAR  shift, and go to state 135


State 98

   47 MethodInvocation: ID . LPAR MethodInvocationOpt RPAR
   48                 | ID . LPAR error RPAR
   81 Expr1: ID .
   82      | ID . DOTLENGTH

    LPAR       shift, and go to state 77
    DOTLENGTH  shift, and go to state 102

    $default  reduce using rule 81 (Expr1)


State 99

   60 Expr1: Expr1 . PLUS Expr1
   61      | Expr1 . MINUS Expr1
   62      | Expr1 . STAR Expr1
   63      | Expr1 . DIV Expr1
   64      | Expr1 . MOD Expr1
   65      | Expr1 . AND Expr1
   66      | Expr1 . OR Expr1
   67      | Expr1 . XOR Expr1
   68      | Expr1 . LSHIFT Expr1
   69      | Expr1 . RSHIFT Expr1
   70      | Expr1 . EQ Expr1
   71      | Expr1 . GE Expr1
   72      | Expr1 . GT Expr1
   73      | Expr1 . LE Expr1
   74      | Expr1 . LT Expr1
   75      | Expr1 . NE Expr1
   77      | MINUS Expr1 .

    $default  reduce using rule 77 (Expr1)


State 100

   60 Expr1: Expr1 . PLUS Expr1
   61      | Expr1 . MINUS Expr1
   62      | Expr1 . STAR Expr1
   63      | Expr1 . DIV Expr1
   64      | Expr1 . MOD Expr1
   65      | Expr1 . AND Expr1
   66      | Expr1 . OR Expr1
   67      | Expr1 . XOR Expr1
   68      | Expr1 . LSHIFT Expr1
   69      | Expr1 . RSHIFT Expr1
   70      | Expr1 . EQ Expr1
   71      | Expr1 . GE Expr1
   72      | Expr1 . GT Expr1
   73      | Expr1 . LE Expr1
   74      | Expr1 . LT Expr1
   75      | Expr1 . NE Expr1
   76      | NOT Expr1 .

    $default  reduce using rule 76 (Expr1)


State 101

   60 Expr1: Expr1 . PLUS Expr1
   61      | Expr1 . MINUS Expr1
   62      | Expr1 . STAR Expr1
   63      | Expr1 . DIV Expr1
   64      | Expr1 . MOD Expr1
   65      | Expr1 . AND Expr1
   66      | Expr1 . OR Expr1
   67      | Expr1 . XOR Expr1
   68      | Expr1 . LSHIFT Expr1
   69      | Expr1 . RSHIFT Expr1
   70      | Expr1 . EQ Expr1
   71      | Expr1 . GE Expr1
   72      | Expr1 . GT Expr1
   73      | Expr1 . LE Expr1
   74      | Expr1 . LT Expr1
   75      | Expr1 . NE Expr1
   78      | PLUS Expr1 .

    $default  reduce using rule 78 (Expr1)


State 102

   82 Expr1: ID DOTLENGTH .

    $default  reduce using rule 82 (Expr1)


State 103

   33 Statement: RETURN StatementOpt3 SEMICOLON .

    $default  reduce using rule 33 (Statement)


State 104

   65 Expr1: Expr1 AND . Expr1

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 98

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    Expr1             go to state 136


State 105

   62 Expr1: Expr1 STAR . Expr1

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 98

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    Expr1             go to state 137


State 106

   63 Expr1: Expr1 DIV . Expr1

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 98

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    Expr1             go to state 138


State 107

   70 Expr1: Expr1 EQ . Expr1

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 98

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    Expr1             go to state 139


State 108

   71 Expr1: Expr1 GE . Expr1

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 98

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    Expr1             go to state 140


State 109

   72 Expr1: Expr1 GT . Expr1

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 98

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    Expr1             go to state 141


State 110

   73 Expr1: Expr1 LE . Expr1

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 98

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    Expr1             go to state 142


State 111

   74 Expr1: Expr1 LT . Expr1

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 98

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    Expr1             go to state 143


State 112

   61 Expr1: Expr1 MINUS . Expr1

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 98

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    Expr1             go to state 144


State 113

   64 Expr1: Expr1 MOD . Expr1

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 98

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    Expr1             go to state 145


State 114

   75 Expr1: Expr1 NE . Expr1

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 98

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    Expr1             go to state 146


State 115

   66 Expr1: Expr1 OR . Expr1

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 98

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    Expr1             go to state 147


State 116

   60 Expr1: Expr1 PLUS . Expr1

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 98

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    Expr1             go to state 148


State 117

   68 Expr1: Expr1 LSHIFT . Expr1

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 98

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    Expr1             go to state 149


State 118

   69 Expr1: Expr1 RSHIFT . Expr1

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 98

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    Expr1             go to state 150


State 119

   67 Expr1: Expr1 XOR . Expr1

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 98

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    Expr1             go to state 151


State 120

   32 Statement: WHILE LPAR Expr . RPAR Statement

    RPAR  shift, and go to state 152


State 121

   53 Assignment: ID ASSIGN Expr .

    $default  reduce using rule 53 (Assignment)


State 122

   48 MethodInvocation: ID LPAR error . RPAR

    RPAR  shift, and go to state 153


State 123

   47 MethodInvocation: ID LPAR MethodInvocationOpt . RPAR

    RPAR  shift, and go to state 154


State 124

   49 MethodInvocationOpt: Expr . MethodInvocationOpt2

    COMMA  shift, and go to state 155

    $default  reduce using rule 52 (MethodInvocationOpt2)

    MethodInvocationOpt2  go to state 156


State 125

   27 VarDeclOpt: COMMA . ID VarDeclOpt

    ID  shift, and go to state 157


State 126

   26 VarDecl: Type ID VarDeclOpt . SEMICOLON

    SEMICOLON  shift, and go to state 158


State 127

   19 FormalParams: STRING LSQ RSQ . ID

    ID  shift, and go to state 159


State 128

   20 FormalParamsOpt: COMMA . Type ID FormalParamsOpt

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20

    Type  go to state 160


State 129

   18 FormalParams: Type ID FormalParamsOpt .

    $default  reduce using rule 18 (FormalParams)


State 130

   30 Statement: IF LPAR Expr RPAR . Statement
   31          | IF LPAR Expr RPAR . Statement ELSE Statement

    error     shift, and go to state 32
    IF        shift, and go to state 33
    LBRACE    shift, and go to state 34
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    SEMICOLON  reduce using rule 44 (StatementOpt4)

    Statement         go to state 161
    StatementOpt4     go to state 44
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 131

   35 Statement: PRINT LPAR StatementOpt5 RPAR . SEMICOLON

    SEMICOLON  shift, and go to state 162


State 132

   55 ParseArgs: PARSEINT LPAR error RPAR .

    $default  reduce using rule 55 (ParseArgs)


State 133

   54 ParseArgs: PARSEINT LPAR ID LSQ . Expr RSQ RPAR

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 68

    MethodInvocation  go to state 70
    Assignment        go to state 71
    ParseArgs         go to state 72
    Expr              go to state 163
    Expr1             go to state 74


State 134

   59 Expr1: LPAR error RPAR .

    $default  reduce using rule 59 (Expr1)


State 135

   58 Expr1: LPAR Expr RPAR .

    $default  reduce using rule 58 (Expr1)


State 136

   60 Expr1: Expr1 . PLUS Expr1
   61      | Expr1 . MINUS Expr1
   62      | Expr1 . STAR Expr1
   63      | Expr1 . DIV Expr1
   64      | Expr1 . MOD Expr1
   65      | Expr1 . AND Expr1
   65      | Expr1 AND Expr1 .
   66      | Expr1 . OR Expr1
   67      | Expr1 . XOR Expr1
   68      | Expr1 . LSHIFT Expr1
   69      | Expr1 . RSHIFT Expr1
   70      | Expr1 . EQ Expr1
   71      | Expr1 . GE Expr1
   72      | Expr1 . GT Expr1
   73      | Expr1 . LE Expr1
   74      | Expr1 . LT Expr1
   75      | Expr1 . NE Expr1

    STAR    shift, and go to state 105
    DIV     shift, and go to state 106
    EQ      shift, and go to state 107
    GE      shift, and go to state 108
    GT      shift, and go to state 109
    LE      shift, and go to state 110
    LT      shift, and go to state 111
    MINUS   shift, and go to state 112
    MOD     shift, and go to state 113
    NE      shift, and go to state 114
    PLUS    shift, and go to state 116
    LSHIFT  shift, and go to state 117
    RSHIFT  shift, and go to state 118
    XOR     shift, and go to state 119

    $default  reduce using rule 65 (Expr1)


State 137

   60 Expr1: Expr1 . PLUS Expr1
   61      | Expr1 . MINUS Expr1
   62      | Expr1 . STAR Expr1
   62      | Expr1 STAR Expr1 .
   63      | Expr1 . DIV Expr1
   64      | Expr1 . MOD Expr1
   65      | Expr1 . AND Expr1
   66      | Expr1 . OR Expr1
   67      | Expr1 . XOR Expr1
   68      | Expr1 . LSHIFT Expr1
   69      | Expr1 . RSHIFT Expr1
   70      | Expr1 . EQ Expr1
   71      | Expr1 . GE Expr1
   72      | Expr1 . GT Expr1
   73      | Expr1 . LE Expr1
   74      | Expr1 . LT Expr1
   75      | Expr1 . NE Expr1

    $default  reduce using rule 62 (Expr1)


State 138

   60 Expr1: Expr1 . PLUS Expr1
   61      | Expr1 . MINUS Expr1
   62      | Expr1 . STAR Expr1
   63      | Expr1 . DIV Expr1
   63      | Expr1 DIV Expr1 .
   64      | Expr1 . MOD Expr1
   65      | Expr1 . AND Expr1
   66      | Expr1 . OR Expr1
   67      | Expr1 . XOR Expr1
   68      | Expr1 . LSHIFT Expr1
   69      | Expr1 . RSHIFT Expr1
   70      | Expr1 . EQ Expr1
   71      | Expr1 . GE Expr1
   72      | Expr1 . GT Expr1
   73      | Expr1 . LE Expr1
   74      | Expr1 . LT Expr1
   75      | Expr1 . NE Expr1

    $default  reduce using rule 63 (Expr1)


State 139

   60 Expr1: Expr1 . PLUS Expr1
   61      | Expr1 . MINUS Expr1
   62      | Expr1 . STAR Expr1
   63      | Expr1 . DIV Expr1
   64      | Expr1 . MOD Expr1
   65      | Expr1 . AND Expr1
   66      | Expr1 . OR Expr1
   67      | Expr1 . XOR Expr1
   68      | Expr1 . LSHIFT Expr1
   69      | Expr1 . RSHIFT Expr1
   70      | Expr1 . EQ Expr1
   70      | Expr1 EQ Expr1 .
   71      | Expr1 . GE Expr1
   72      | Expr1 . GT Expr1
   73      | Expr1 . LE Expr1
   74      | Expr1 . LT Expr1
   75      | Expr1 . NE Expr1

    STAR    shift, and go to state 105
    DIV     shift, and go to state 106
    GE      shift, and go to state 108
    GT      shift, and go to state 109
    LE      shift, and go to state 110
    LT      shift, and go to state 111
    MINUS   shift, and go to state 112
    MOD     shift, and go to state 113
    PLUS    shift, and go to state 116
    LSHIFT  shift, and go to state 117
    RSHIFT  shift, and go to state 118

    $default  reduce using rule 70 (Expr1)


State 140

   60 Expr1: Expr1 . PLUS Expr1
   61      | Expr1 . MINUS Expr1
   62      | Expr1 . STAR Expr1
   63      | Expr1 . DIV Expr1
   64      | Expr1 . MOD Expr1
   65      | Expr1 . AND Expr1
   66      | Expr1 . OR Expr1
   67      | Expr1 . XOR Expr1
   68      | Expr1 . LSHIFT Expr1
   69      | Expr1 . RSHIFT Expr1
   70      | Expr1 . EQ Expr1
   71      | Expr1 . GE Expr1
   71      | Expr1 GE Expr1 .
   72      | Expr1 . GT Expr1
   73      | Expr1 . LE Expr1
   74      | Expr1 . LT Expr1
   75      | Expr1 . NE Expr1

    STAR    shift, and go to state 105
    DIV     shift, and go to state 106
    MINUS   shift, and go to state 112
    MOD     shift, and go to state 113
    PLUS    shift, and go to state 116
    LSHIFT  shift, and go to state 117
    RSHIFT  shift, and go to state 118

    $default  reduce using rule 71 (Expr1)


State 141

   60 Expr1: Expr1 . PLUS Expr1
   61      | Expr1 . MINUS Expr1
   62      | Expr1 . STAR Expr1
   63      | Expr1 . DIV Expr1
   64      | Expr1 . MOD Expr1
   65      | Expr1 . AND Expr1
   66      | Expr1 . OR Expr1
   67      | Expr1 . XOR Expr1
   68      | Expr1 . LSHIFT Expr1
   69      | Expr1 . RSHIFT Expr1
   70      | Expr1 . EQ Expr1
   71      | Expr1 . GE Expr1
   72      | Expr1 . GT Expr1
   72      | Expr1 GT Expr1 .
   73      | Expr1 . LE Expr1
   74      | Expr1 . LT Expr1
   75      | Expr1 . NE Expr1

    STAR    shift, and go to state 105
    DIV     shift, and go to state 106
    MINUS   shift, and go to state 112
    MOD     shift, and go to state 113
    PLUS    shift, and go to state 116
    LSHIFT  shift, and go to state 117
    RSHIFT  shift, and go to state 118

    $default  reduce using rule 72 (Expr1)


State 142

   60 Expr1: Expr1 . PLUS Expr1
   61      | Expr1 . MINUS Expr1
   62      | Expr1 . STAR Expr1
   63      | Expr1 . DIV Expr1
   64      | Expr1 . MOD Expr1
   65      | Expr1 . AND Expr1
   66      | Expr1 . OR Expr1
   67      | Expr1 . XOR Expr1
   68      | Expr1 . LSHIFT Expr1
   69      | Expr1 . RSHIFT Expr1
   70      | Expr1 . EQ Expr1
   71      | Expr1 . GE Expr1
   72      | Expr1 . GT Expr1
   73      | Expr1 . LE Expr1
   73      | Expr1 LE Expr1 .
   74      | Expr1 . LT Expr1
   75      | Expr1 . NE Expr1

    STAR    shift, and go to state 105
    DIV     shift, and go to state 106
    MINUS   shift, and go to state 112
    MOD     shift, and go to state 113
    PLUS    shift, and go to state 116
    LSHIFT  shift, and go to state 117
    RSHIFT  shift, and go to state 118

    $default  reduce using rule 73 (Expr1)


State 143

   60 Expr1: Expr1 . PLUS Expr1
   61      | Expr1 . MINUS Expr1
   62      | Expr1 . STAR Expr1
   63      | Expr1 . DIV Expr1
   64      | Expr1 . MOD Expr1
   65      | Expr1 . AND Expr1
   66      | Expr1 . OR Expr1
   67      | Expr1 . XOR Expr1
   68      | Expr1 . LSHIFT Expr1
   69      | Expr1 . RSHIFT Expr1
   70      | Expr1 . EQ Expr1
   71      | Expr1 . GE Expr1
   72      | Expr1 . GT Expr1
   73      | Expr1 . LE Expr1
   74      | Expr1 . LT Expr1
   74      | Expr1 LT Expr1 .
   75      | Expr1 . NE Expr1

    STAR    shift, and go to state 105
    DIV     shift, and go to state 106
    MINUS   shift, and go to state 112
    MOD     shift, and go to state 113
    PLUS    shift, and go to state 116
    LSHIFT  shift, and go to state 117
    RSHIFT  shift, and go to state 118

    $default  reduce using rule 74 (Expr1)


State 144

   60 Expr1: Expr1 . PLUS Expr1
   61      | Expr1 . MINUS Expr1
   61      | Expr1 MINUS Expr1 .
   62      | Expr1 . STAR Expr1
   63      | Expr1 . DIV Expr1
   64      | Expr1 . MOD Expr1
   65      | Expr1 . AND Expr1
   66      | Expr1 . OR Expr1
   67      | Expr1 . XOR Expr1
   68      | Expr1 . LSHIFT Expr1
   69      | Expr1 . RSHIFT Expr1
   70      | Expr1 . EQ Expr1
   71      | Expr1 . GE Expr1
   72      | Expr1 . GT Expr1
   73      | Expr1 . LE Expr1
   74      | Expr1 . LT Expr1
   75      | Expr1 . NE Expr1

    STAR  shift, and go to state 105
    DIV   shift, and go to state 106
    MOD   shift, and go to state 113

    $default  reduce using rule 61 (Expr1)


State 145

   60 Expr1: Expr1 . PLUS Expr1
   61      | Expr1 . MINUS Expr1
   62      | Expr1 . STAR Expr1
   63      | Expr1 . DIV Expr1
   64      | Expr1 . MOD Expr1
   64      | Expr1 MOD Expr1 .
   65      | Expr1 . AND Expr1
   66      | Expr1 . OR Expr1
   67      | Expr1 . XOR Expr1
   68      | Expr1 . LSHIFT Expr1
   69      | Expr1 . RSHIFT Expr1
   70      | Expr1 . EQ Expr1
   71      | Expr1 . GE Expr1
   72      | Expr1 . GT Expr1
   73      | Expr1 . LE Expr1
   74      | Expr1 . LT Expr1
   75      | Expr1 . NE Expr1

    $default  reduce using rule 64 (Expr1)


State 146

   60 Expr1: Expr1 . PLUS Expr1
   61      | Expr1 . MINUS Expr1
   62      | Expr1 . STAR Expr1
   63      | Expr1 . DIV Expr1
   64      | Expr1 . MOD Expr1
   65      | Expr1 . AND Expr1
   66      | Expr1 . OR Expr1
   67      | Expr1 . XOR Expr1
   68      | Expr1 . LSHIFT Expr1
   69      | Expr1 . RSHIFT Expr1
   70      | Expr1 . EQ Expr1
   71      | Expr1 . GE Expr1
   72      | Expr1 . GT Expr1
   73      | Expr1 . LE Expr1
   74      | Expr1 . LT Expr1
   75      | Expr1 . NE Expr1
   75      | Expr1 NE Expr1 .

    STAR    shift, and go to state 105
    DIV     shift, and go to state 106
    GE      shift, and go to state 108
    GT      shift, and go to state 109
    LE      shift, and go to state 110
    LT      shift, and go to state 111
    MINUS   shift, and go to state 112
    MOD     shift, and go to state 113
    PLUS    shift, and go to state 116
    LSHIFT  shift, and go to state 117
    RSHIFT  shift, and go to state 118

    $default  reduce using rule 75 (Expr1)


State 147

   60 Expr1: Expr1 . PLUS Expr1
   61      | Expr1 . MINUS Expr1
   62      | Expr1 . STAR Expr1
   63      | Expr1 . DIV Expr1
   64      | Expr1 . MOD Expr1
   65      | Expr1 . AND Expr1
   66      | Expr1 . OR Expr1
   66      | Expr1 OR Expr1 .
   67      | Expr1 . XOR Expr1
   68      | Expr1 . LSHIFT Expr1
   69      | Expr1 . RSHIFT Expr1
   70      | Expr1 . EQ Expr1
   71      | Expr1 . GE Expr1
   72      | Expr1 . GT Expr1
   73      | Expr1 . LE Expr1
   74      | Expr1 . LT Expr1
   75      | Expr1 . NE Expr1

    AND     shift, and go to state 104
    STAR    shift, and go to state 105
    DIV     shift, and go to state 106
    EQ      shift, and go to state 107
    GE      shift, and go to state 108
    GT      shift, and go to state 109
    LE      shift, and go to state 110
    LT      shift, and go to state 111
    MINUS   shift, and go to state 112
    MOD     shift, and go to state 113
    NE      shift, and go to state 114
    PLUS    shift, and go to state 116
    LSHIFT  shift, and go to state 117
    RSHIFT  shift, and go to state 118
    XOR     shift, and go to state 119

    $default  reduce using rule 66 (Expr1)


State 148

   60 Expr1: Expr1 . PLUS Expr1
   60      | Expr1 PLUS Expr1 .
   61      | Expr1 . MINUS Expr1
   62      | Expr1 . STAR Expr1
   63      | Expr1 . DIV Expr1
   64      | Expr1 . MOD Expr1
   65      | Expr1 . AND Expr1
   66      | Expr1 . OR Expr1
   67      | Expr1 . XOR Expr1
   68      | Expr1 . LSHIFT Expr1
   69      | Expr1 . RSHIFT Expr1
   70      | Expr1 . EQ Expr1
   71      | Expr1 . GE Expr1
   72      | Expr1 . GT Expr1
   73      | Expr1 . LE Expr1
   74      | Expr1 . LT Expr1
   75      | Expr1 . NE Expr1

    STAR  shift, and go to state 105
    DIV   shift, and go to state 106
    MOD   shift, and go to state 113

    $default  reduce using rule 60 (Expr1)


State 149

   60 Expr1: Expr1 . PLUS Expr1
   61      | Expr1 . MINUS Expr1
   62      | Expr1 . STAR Expr1
   63      | Expr1 . DIV Expr1
   64      | Expr1 . MOD Expr1
   65      | Expr1 . AND Expr1
   66      | Expr1 . OR Expr1
   67      | Expr1 . XOR Expr1
   68      | Expr1 . LSHIFT Expr1
   68      | Expr1 LSHIFT Expr1 .
   69      | Expr1 . RSHIFT Expr1
   70      | Expr1 . EQ Expr1
   71      | Expr1 . GE Expr1
   72      | Expr1 . GT Expr1
   73      | Expr1 . LE Expr1
   74      | Expr1 . LT Expr1
   75      | Expr1 . NE Expr1

    STAR   shift, and go to state 105
    DIV    shift, and go to state 106
    MINUS  shift, and go to state 112
    MOD    shift, and go to state 113
    PLUS   shift, and go to state 116

    $default  reduce using rule 68 (Expr1)


State 150

   60 Expr1: Expr1 . PLUS Expr1
   61      | Expr1 . MINUS Expr1
   62      | Expr1 . STAR Expr1
   63      | Expr1 . DIV Expr1
   64      | Expr1 . MOD Expr1
   65      | Expr1 . AND Expr1
   66      | Expr1 . OR Expr1
   67      | Expr1 . XOR Expr1
   68      | Expr1 . LSHIFT Expr1
   69      | Expr1 . RSHIFT Expr1
   69      | Expr1 RSHIFT Expr1 .
   70      | Expr1 . EQ Expr1
   71      | Expr1 . GE Expr1
   72      | Expr1 . GT Expr1
   73      | Expr1 . LE Expr1
   74      | Expr1 . LT Expr1
   75      | Expr1 . NE Expr1

    STAR   shift, and go to state 105
    DIV    shift, and go to state 106
    MINUS  shift, and go to state 112
    MOD    shift, and go to state 113
    PLUS   shift, and go to state 116

    $default  reduce using rule 69 (Expr1)


State 151

   60 Expr1: Expr1 . PLUS Expr1
   61      | Expr1 . MINUS Expr1
   62      | Expr1 . STAR Expr1
   63      | Expr1 . DIV Expr1
   64      | Expr1 . MOD Expr1
   65      | Expr1 . AND Expr1
   66      | Expr1 . OR Expr1
   67      | Expr1 . XOR Expr1
   67      | Expr1 XOR Expr1 .
   68      | Expr1 . LSHIFT Expr1
   69      | Expr1 . RSHIFT Expr1
   70      | Expr1 . EQ Expr1
   71      | Expr1 . GE Expr1
   72      | Expr1 . GT Expr1
   73      | Expr1 . LE Expr1
   74      | Expr1 . LT Expr1
   75      | Expr1 . NE Expr1

    STAR    shift, and go to state 105
    DIV     shift, and go to state 106
    EQ      shift, and go to state 107
    GE      shift, and go to state 108
    GT      shift, and go to state 109
    LE      shift, and go to state 110
    LT      shift, and go to state 111
    MINUS   shift, and go to state 112
    MOD     shift, and go to state 113
    NE      shift, and go to state 114
    PLUS    shift, and go to state 116
    LSHIFT  shift, and go to state 117
    RSHIFT  shift, and go to state 118

    $default  reduce using rule 67 (Expr1)


State 152

   32 Statement: WHILE LPAR Expr RPAR . Statement

    error     shift, and go to state 32
    IF        shift, and go to state 33
    LBRACE    shift, and go to state 34
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    SEMICOLON  reduce using rule 44 (StatementOpt4)

    Statement         go to state 164
    StatementOpt4     go to state 44
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 153

   48 MethodInvocation: ID LPAR error RPAR .

    $default  reduce using rule 48 (MethodInvocation)


State 154

   47 MethodInvocation: ID LPAR MethodInvocationOpt RPAR .

    $default  reduce using rule 47 (MethodInvocation)


State 155

   51 MethodInvocationOpt2: COMMA . Expr MethodInvocationOpt2

    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    INTLIT    shift, and go to state 65
    REALLIT   shift, and go to state 66
    BOOLLIT   shift, and go to state 67
    ID        shift, and go to state 68

    MethodInvocation  go to state 70
    Assignment        go to state 71
    ParseArgs         go to state 72
    Expr              go to state 165
    Expr1             go to state 74


State 156

   49 MethodInvocationOpt: Expr MethodInvocationOpt2 .

    $default  reduce using rule 49 (MethodInvocationOpt)


State 157

   27 VarDeclOpt: COMMA ID . VarDeclOpt

    COMMA  shift, and go to state 125

    $default  reduce using rule 28 (VarDeclOpt)

    VarDeclOpt  go to state 166


State 158

   26 VarDecl: Type ID VarDeclOpt SEMICOLON .

    $default  reduce using rule 26 (VarDecl)


State 159

   19 FormalParams: STRING LSQ RSQ ID .

    $default  reduce using rule 19 (FormalParams)


State 160

   20 FormalParamsOpt: COMMA Type . ID FormalParamsOpt

    ID  shift, and go to state 167


State 161

   30 Statement: IF LPAR Expr RPAR Statement .
   31          | IF LPAR Expr RPAR Statement . ELSE Statement

    ELSE  shift, and go to state 168

    $default  reduce using rule 30 (Statement)


State 162

   35 Statement: PRINT LPAR StatementOpt5 RPAR SEMICOLON .

    $default  reduce using rule 35 (Statement)


State 163

   54 ParseArgs: PARSEINT LPAR ID LSQ Expr . RSQ RPAR

    RSQ  shift, and go to state 169


State 164

   32 Statement: WHILE LPAR Expr RPAR Statement .

    $default  reduce using rule 32 (Statement)


State 165

   51 MethodInvocationOpt2: COMMA Expr . MethodInvocationOpt2

    COMMA  shift, and go to state 155

    $default  reduce using rule 52 (MethodInvocationOpt2)

    MethodInvocationOpt2  go to state 170


State 166

   27 VarDeclOpt: COMMA ID VarDeclOpt .

    $default  reduce using rule 27 (VarDeclOpt)


State 167

   20 FormalParamsOpt: COMMA Type ID . FormalParamsOpt

    COMMA  shift, and go to state 128

    $default  reduce using rule 21 (FormalParamsOpt)

    FormalParamsOpt  go to state 171


State 168

   31 Statement: IF LPAR Expr RPAR Statement ELSE . Statement

    error     shift, and go to state 32
    IF        shift, and go to state 33
    LBRACE    shift, and go to state 34
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    SEMICOLON  reduce using rule 44 (StatementOpt4)

    Statement         go to state 172
    StatementOpt4     go to state 44
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 169

   54 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ . RPAR

    RPAR  shift, and go to state 173


State 170

   51 MethodInvocationOpt2: COMMA Expr MethodInvocationOpt2 .

    $default  reduce using rule 51 (MethodInvocationOpt2)


State 171

   20 FormalParamsOpt: COMMA Type ID FormalParamsOpt .

    $default  reduce using rule 20 (FormalParamsOpt)


State 172

   31 Statement: IF LPAR Expr RPAR Statement ELSE Statement .

    $default  reduce using rule 31 (Statement)


State 173

   54 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR .

    $default  reduce using rule 54 (ParseArgs)
